name: Build Serverless BLS Signer

on:
  push:
    branches:
      - main

env:
  AWS_REGION: us-west-1
  GO111MODULE: on
  GOOS: linux
  GOARCH: amd64
  CGO_ENABLED: 1
  SERVERLESS_IMG: zeusfyi
  SERVERLESS_NAME: ethereumbls
  SERVERLESS_LATEST: zeusfyi/ethereumbls:latest
jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Build Serverless BLS Signer
      run: |
        docker buildx build -t ${SERVERLESS_IMG} -t ${SERVERLESS_LATEST} --build-arg GOMODCACHE=${GOMODCACHE} --build-arg GOCACHE=${GOCACHE} --build-arg GOOS=${GOOS} --build-arg GOARCH=${GOARCH} --platform=${GOOS}/${GOARCH} -f docker/serverless/Dockerfile .
        docker run -it --entrypoint /bin/bash ${SERVERLESS_REPO}/ethereumbls:latest
        docker cp $(docker container ls | awk 'NR==2 {print $1}'):/usr/bin/ethereumsignbls .
        mv ethereumsignbls main
        zip main.zip main

    - name: Set up AWS CLI
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Upload the zip file to AWS Lambda
      run: |
        aws lambda update-function-code --function-name ${{ secrets.AWS_BLS_FUNCTION_NAME }} --zip-file fileb://main.zip > /dev/null

    - name: Upload binary as artifact
      uses: actions/upload-artifact@v2
      with:
        name: main.zip
        path: main.zip
